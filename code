//Author - Sinjita Saha
//Student_Information_System

import java.util.ArrayList;
import java.util.Scanner;

class Student {
    private String name;
    private int rollNumber;
    private String course;
    private double grade;

    public Student(String name, int rollNumber, String course, double grade) {
        this.name = name;
        this.rollNumber = rollNumber;
        this.course = course;
        this.grade = grade;
    }

    public int getRollNumber() {
        return rollNumber;
    }

    public void setGrade(double grade) {
        this.grade = grade;
    }

    public void setCourse(String course) {
        this.course = course;
    }

    public void displayStudentInfo() {
        System.out.println("Name: " + name);
        System.out.println("Roll Number: " + rollNumber);
        System.out.println("Course: " + course);
        System.out.println("Grade: " + grade);
    }
}

public class StudentInformationSystem {
    private static ArrayList<Student> students = new ArrayList<>();
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        boolean running = true;
        while (running) {
            System.out.println("\nStudent Information System Menu");
            System.out.println("1. Add Student");
            System.out.println("2. View Student");
            System.out.println("3. Update Student");
            System.out.println("4. Delete Student");
            System.out.println("5. Display All Students");
            System.out.println("6. Exit");
            System.out.print("Choose an option: ");
            int option = scanner.nextInt();
            scanner.nextLine();  // consume newline

            switch (option) {
                case 1:
                    addStudent();
                    break;
                case 2:
                    viewStudent();
                    break;
                case 3:
                    updateStudent();
                    break;
                case 4:
                    deleteStudent();
                    break;
                case 5:
                    displayAllStudents();
                    break;
                case 6:
                    running = false;
                    System.out.println("Exiting Student Information System.");
                    break;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }

    private static void addStudent() {
        System.out.print("Enter Student Name: ");
        String name = scanner.nextLine();
        System.out.print("Enter Roll Number: ");
        int rollNumber = scanner.nextInt();
        scanner.nextLine();  // consume newline
        System.out.print("Enter Course: ");
        String course = scanner.nextLine();
        System.out.print("Enter Grade: ");
        double grade = scanner.nextDouble();
        scanner.nextLine();  // consume newline

        Student newStudent = new Student(name, rollNumber, course, grade);
        students.add(newStudent);
        System.out.println("Student added successfully!");
    }

    private static void viewStudent() {
        System.out.print("Enter Roll Number of the Student: ");
        int rollNumber = scanner.nextInt();
        scanner.nextLine();  // consume newline

        for (Student student : students) {
            if (student.getRollNumber() == rollNumber) {
                student.displayStudentInfo();
                return;
            }
        }
        System.out.println("Student not found with Roll Number: " + rollNumber);
    }

    private static void updateStudent() {
        System.out.print("Enter Roll Number of the Student to update: ");
        int rollNumber = scanner.nextInt();
        scanner.nextLine();  // consume newline

        for (Student student : students) {
            if (student.getRollNumber() == rollNumber) {
                System.out.print("Enter new Course: ");
                String newCourse = scanner.nextLine();
                System.out.print("Enter new Grade: ");
                double newGrade = scanner.nextDouble();
                scanner.nextLine();  // consume newline

                student.setCourse(newCourse);
                student.setGrade(newGrade);
                System.out.println("Student record updated successfully!");
                return;
            }
        }
        System.out.println("Student not found with Roll Number: " + rollNumber);
    }

    private static void deleteStudent() {
        System.out.print("Enter Roll Number of the Student to delete: ");
        int rollNumber = scanner.nextInt();
        scanner.nextLine();  // consume newline

        for (Student student : students) {
            if (student.getRollNumber() == rollNumber) {
                students.remove(student);
                System.out.println("Student deleted successfully!");
                return;
            }
        }
        System.out.println("Student not found with Roll Number: " + rollNumber);
    }

    private static void displayAllStudents() {
        if (students.isEmpty()) {
            System.out.println("No students to display.");
        } else {
            for (Student student : students) {
                student.displayStudentInfo();
                System.out.println("--------------------------");
            }
        }
    }
}
